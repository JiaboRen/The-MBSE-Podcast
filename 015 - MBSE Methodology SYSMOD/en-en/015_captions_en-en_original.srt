1
00:00:00,669 --> 00:00:05,320
Hello everybody and welcome back to our MBSE
podcast.

2
00:00:05,320 --> 00:00:11,790
Today we will have an episode which I guess
many of you have waited for a long time because

3
00:00:11,790 --> 00:00:21,140
today we will have the talk about the first
methodology and as Tim is author of and methodology.

4
00:00:21,140 --> 00:00:26,130
We will take SYSMOD and its companion Vamos.

5
00:00:26,130 --> 00:00:31,430
Have waited for a long time.

6
00:00:31,430 --> 00:00:32,689
And sorry I have to.

7
00:00:32,689 --> 00:00:38,730
Ah OK, great I I hurt myself.

8
00:00:38,730 --> 00:00:41,909
So I had to mute myself.

9
00:00:41,909 --> 00:00:49,400
So OK, we are talking about SYSMOD and vamos
and fuss and what these three things are and

10
00:00:49,400 --> 00:00:50,400
how.

11
00:00:50,400 --> 00:00:51,600
They are related.

12
00:00:51,600 --> 00:00:56,679
And therefore, yeah, Tim, maybe we can start
directly with the first question.

13
00:00:56,679 --> 00:00:58,280
What is a methodology?

14
00:00:58,280 --> 00:01:03,879
Yeah, well, that's a very good question, and
it's for many charms.

15
00:01:03,879 --> 00:01:04,879
Isn't anything?

16
00:01:04,879 --> 00:01:08,719
It seems to be simple the first few, but it
isn't.

17
00:01:08,719 --> 00:01:18,460
So, so there are many terms around methodology
of methodology, method and process and tasks.

18
00:01:18,460 --> 00:01:23,490
Many terms that are most useful mostly.

19
00:01:23,490 --> 00:01:26,409
But they aren't.

20
00:01:26,409 --> 00:01:27,409
And so.

21
00:01:27,409 --> 00:01:34,560
So personally, I like the definition from
James Martin, which he provides in his book

22
00:01:34,560 --> 00:01:40,350
Systems Engineering Guide Book, A process
for developing systems and products from 1996.

23
00:01:40,350 --> 00:01:48,521
That's also the definition Jeff SFM used in
this paper about this methodology's. That's

24
00:01:48,521 --> 00:01:49,689
quite famous paper, it's.

25
00:01:49,689 --> 00:01:50,689
Fully available.

26
00:01:50,689 --> 00:01:54,090
Testifying in this methodology gave an overview
about investing methodologies, but it's quite

27
00:01:54,090 --> 00:01:55,090
old.

28
00:01:55,090 --> 00:02:02,789
And and the introduction chapter. He also
defined methodology. In other terms, they're

29
00:02:02,789 --> 00:02:09,909
using James Martin's definitions, and when
I have to read this to be correct, so James

30
00:02:09,909 --> 00:02:16,140
Martin defines a methodology as a collection
of related processes, methods, and tools.

31
00:02:16,140 --> 00:02:24,140
Also, processes and methods and assignments
and so methodology is different meanings.

32
00:02:24,140 --> 00:02:27,580
So methodology is this collection.

33
00:02:27,580 --> 00:02:35,409
And now according to James Martin, at process
there's a logical sequence of tasks.

34
00:02:35,409 --> 00:02:38,099
Performed to achieve a particular objective.

35
00:02:38,099 --> 00:02:44,950
So for example, a requirement engineering
process or system architecting process validation

36
00:02:44,950 --> 00:02:49,379
process and and so on.

37
00:02:49,379 --> 00:02:54,959
And a method method describes the techniques
to perform a task.

38
00:02:54,959 --> 00:03:01,280
So in our requirement engineering process,
you could have a task to define use cases

39
00:03:01,280 --> 00:03:05,459
and then you can apply a use case method.

40
00:03:05,459 --> 00:03:08,129
To do it.

41
00:03:08,129 --> 00:03:11,330
And finally, part of the definition of methodology
was.

42
00:03:11,330 --> 00:03:13,319
The term tool.

43
00:03:13,319 --> 00:03:20,079
With related processes, methods and tools,
and Atul is that's just a thing and instrument

44
00:03:20,079 --> 00:03:26,400
that apply to a method can enhance the efficiency
of the task so we can do use case analysis

45
00:03:26,400 --> 00:03:30,910
with a pen as a tool over the system modeling
tool and so on.

46
00:03:30,910 --> 00:03:32,290
So that's that's.

47
00:03:32,290 --> 00:03:35,049
The tool.

48
00:03:35,049 --> 00:03:40,900
OK and yeah, and I think this is very, very
important for many people who are starting

49
00:03:40,900 --> 00:03:43,970
with systems engineering to exactly.

50
00:03:43,970 --> 00:03:47,000
Yeah, understand this.

51
00:03:47,000 --> 00:03:54,439
This difference and familiar process is something
that you want to make repeatable and something

52
00:03:54,439 --> 00:03:55,439
which.

53
00:03:55,439 --> 00:04:01,080
Is connected to roles and or to people who
are performing these roles with.

54
00:04:01,080 --> 00:04:03,439
Certain methods.

55
00:04:03,439 --> 00:04:04,569
Great cool.

56
00:04:04,569 --> 00:04:05,959
And I think it's important that a.

57
00:04:05,959 --> 00:04:09,650
Methodology is is a collection, so it's more
like a toolbox.

58
00:04:09,650 --> 00:04:12,680
The methodology itself is not a strict process.

59
00:04:12,680 --> 00:04:17,860
The toolbox that contains processes and other
things or.

60
00:04:17,860 --> 00:04:19,170
Yeah yeah yeah.

61
00:04:19,170 --> 00:04:23,270
And there is also much.

62
00:04:23,270 --> 00:04:25,720
Literature about PMT in general.

63
00:04:25,720 --> 00:04:31,641
So if you want to know more about methodologies,
you can also Google for PMT very often, and

64
00:04:31,641 --> 00:04:34,420
you will find something.

65
00:04:34,420 --> 00:04:43,440
OK, so today we want to speak about 1 certain
methodology called Seesmart and Varmus and

66
00:04:43,440 --> 00:04:48,420
Fuss and Tim how are they related to each
other?

67
00:04:48,420 --> 00:04:55,350
So this one, this is an NBC methodology and
it's mainly used for requirement in ring system

68
00:04:55,350 --> 00:04:56,350
architectures.

69
00:04:56,350 --> 00:05:02,470
Also the main technical processes and systems
engineering.

70
00:05:02,470 --> 00:05:09,030
In addition, it also contains some some methods
for for the adoption of mercy and also considers

71
00:05:09,030 --> 00:05:13,010
consulting and training and the set up of
the technical this environment.

72
00:05:13,010 --> 00:05:18,780
Things like that, but the main part is requirements
engineering and system architecture, so that's

73
00:05:18,780 --> 00:05:19,860
that's this.

74
00:05:19,860 --> 00:05:22,570
And namus.

75
00:05:22,570 --> 00:05:26,550
Stands for variant modeling with system.

76
00:05:26,550 --> 00:05:35,090
Well, that one is is it's only a method, so
it's not a full methodology that describes

77
00:05:35,090 --> 00:05:42,580
how to model variability of system in independent
of any specific product line engineering tool.

78
00:05:42,580 --> 00:05:48,140
That was one of the main objectives of famous
to have.

79
00:05:48,140 --> 00:05:56,570
An approach here only based on the system
standard and OCL which is sort of a part of

80
00:05:56,570 --> 00:05:57,670
system.

81
00:05:57,670 --> 00:06:01,520
And mail is defined in the context of this,
not so completely.

82
00:06:01,520 --> 00:06:05,840
There's a small profile available and part
of the profile of the famous stereotypes,

83
00:06:05,840 --> 00:06:06,840
but they're.

84
00:06:06,840 --> 00:06:08,140
Independent with each other so.

85
00:06:08,140 --> 00:06:14,070
And without almost fast, fast stands for functional
architectures.

86
00:06:14,070 --> 00:06:25,150
For systems, that's a method, so it's also
not a methodology, it's it's only a method

87
00:06:25,150 --> 00:06:30,400
for deriving a functional architecture from
from use cases representing the functional

88
00:06:30,400 --> 00:06:31,400
requirements.

89
00:06:31,400 --> 00:06:35,020
And I found this method.

90
00:06:35,020 --> 00:06:39,790
Together with yes Golem around.

91
00:06:39,790 --> 00:06:43,870
More than 10 years ago.

92
00:06:43,870 --> 00:06:46,180
We practiced it's in the system.

93
00:06:46,180 --> 00:06:50,920
Ending journal from Wiley and the current
version is published in our book model based

94
00:06:50,920 --> 00:06:53,460
System Architecture.

95
00:06:53,460 --> 00:06:58,000
OK, so.

96
00:06:58,000 --> 00:07:04,280
We now know about the methods and we know,
we know we have to implement it in processes

97
00:07:04,280 --> 00:07:06,610
to get it running.

98
00:07:06,610 --> 00:07:07,680
But what about the tools?

99
00:07:07,680 --> 00:07:09,140
Is it bound to a specific tool?

100
00:07:09,140 --> 00:07:15,830
No, no, no, they are not bound to a specific
tool up.

101
00:07:15,830 --> 00:07:18,580
Of course it's good to use a system modeling.

102
00:07:18,580 --> 00:07:20,460
Tool for them so they are.

103
00:07:20,460 --> 00:07:23,770
I know at least this part is independent of
system error.

104
00:07:23,770 --> 00:07:29,670
Of course it fits very well, so at least it
needs a system error modeling tool and the

105
00:07:29,670 --> 00:07:32,060
model just almost conflict with this.

106
00:07:32,060 --> 00:07:33,160
But it's not specific.

107
00:07:33,160 --> 00:07:36,530
Them toward any of the the tools.

108
00:07:36,530 --> 00:07:47,220
And even less so today there are plugins available
and containing the profiles for for some modeling

109
00:07:47,220 --> 00:07:51,040
tools, but they're only for for the convenience.

110
00:07:51,040 --> 00:07:52,669
So if you.

111
00:07:52,669 --> 00:07:55,180
Use a system modeling tool which is confirmed
to the standard and they lost profiles and

112
00:07:55,180 --> 00:07:56,180
stereotypes.

113
00:07:56,180 --> 00:08:00,390
You can easily define the profiles to set
the human system modeling task.

114
00:08:00,390 --> 00:08:02,100
So it's no.

115
00:08:02,100 --> 00:08:05,600
Need to do some programming or so.

116
00:08:05,600 --> 00:08:11,090
But defining your profiles.

117
00:08:11,090 --> 00:08:12,330
It's a very good idea.

118
00:08:12,330 --> 00:08:17,060
In any case, you should customize the methodology
so you cannot use smart banners.

119
00:08:17,060 --> 00:08:21,470
As well, any other methodology out of the
box?

120
00:08:21,470 --> 00:08:27,040
Maybe only at the beginning as a starting
point, but in the end we must customize the

121
00:08:27,040 --> 00:08:32,719
task to your specific needs, and then you
need your own profile.

122
00:08:32,719 --> 00:08:38,550
OK, yeah, also a very important point.

123
00:08:38,550 --> 00:08:42,729
Which from my point of view is sometimes.

124
00:08:42,729 --> 00:08:47,620
Uhm yeah, the blocking element too.

125
00:08:47,620 --> 00:08:54,190
Two to four for the adoption of Systems engineering
for many companies because for having your

126
00:08:54,190 --> 00:08:57,029
own profile, you have to have.

127
00:08:57,029 --> 00:09:04,160
Much knowledge about systems engineering,
general about methods and about this symbol

128
00:09:04,160 --> 00:09:05,170
and profiling.

129
00:09:05,170 --> 00:09:11,769
Yeah, and and only a few persons must know
the the profile mechanism.

130
00:09:11,769 --> 00:09:18,480
Not every model must know it, but interestingly,
there's very less information available how

131
00:09:18,480 --> 00:09:19,550
to do this.

132
00:09:19,550 --> 00:09:22,040
Also, finding some system error.

133
00:09:22,040 --> 00:09:24,949
It's your stuff in blue mailbox.

134
00:09:24,949 --> 00:09:26,890
Define stereotypes, but you must know.

135
00:09:26,890 --> 00:09:29,160
The meter model behind it.

136
00:09:29,160 --> 00:09:34,870
And I think it's only documented in the specification
and specification is not a good document to

137
00:09:34,870 --> 00:09:42,029
read its specification, and so there are no
teaching books, no trainings available, how

138
00:09:42,029 --> 00:09:45,010
to do profiling and then everyone needs it.

139
00:09:45,010 --> 00:09:52,689
OK, Mm-hmm yeah totally totally correct and
we will go into the meta model a little bit

140
00:09:52,689 --> 00:09:55,910
deeper in and follow up question.

141
00:09:55,910 --> 00:10:01,889
But first of all, you said fuss is more than
10 years old.

142
00:10:01,889 --> 00:10:05,370
When and how did you invent this model?

143
00:10:05,370 --> 00:10:13,170
Yes, this model is about 20 years old I think,
yeah, around.

144
00:10:13,170 --> 00:10:17,320
But I I don't see myself as an inventor of
sports.

145
00:10:17,320 --> 00:10:18,649
I'm I'm worthy.

146
00:10:18,649 --> 00:10:26,360
The editor or orchestrator, also versus not,
contains lots and lots of methods.

147
00:10:26,360 --> 00:10:33,560
That are very common, so and the intent of
those case methods and so on.

148
00:10:33,560 --> 00:10:37,920
So in in detail I have find you.

149
00:10:37,920 --> 00:10:43,740
It's so that everything fits well together,
and I also did the mapping tool to system

150
00:10:43,740 --> 00:10:47,350
error or the detailed mapping to system, but
in general.

151
00:10:47,350 --> 00:10:49,509
A set of common problems.

152
00:10:49,509 --> 00:10:58,660
And I did this around 20 years ago and it's
based on the methods based on the human suffering.

153
00:10:58,660 --> 00:11:06,029
During that time they were quite famous and
and I have transferred them into two systems

154
00:11:06,029 --> 00:11:07,410
and to society.

155
00:11:07,410 --> 00:11:09,050
Oh, OK.

156
00:11:09,050 --> 00:11:12,579
And since then, this is what has developed
further, of course.

157
00:11:12,579 --> 00:11:17,350
But the core is very stable, so it's quite
the same then.

158
00:11:17,350 --> 00:11:18,350
20 years ago.

159
00:11:18,350 --> 00:11:23,009
OK, I I really didn't know that it has a Umm,
history interesting.

160
00:11:23,009 --> 00:11:31,839
Yeah, so it was yes it's 2001 or 2002 surgery
at that time. In that time I was already a

161
00:11:31,839 --> 00:11:38,130
consultant and trainer for modeling, and during
that time Umm so. So it was not.

162
00:11:38,130 --> 00:11:42,920
Yet, and most of my customers, that's Umm
modeling for software engineering, but I also

163
00:11:42,920 --> 00:11:44,589
had some customers.

164
00:11:44,589 --> 00:11:52,149
They used Umm for business processes and I
had some customers that do processes independent

165
00:11:52,149 --> 00:11:53,149
of of software.

166
00:11:53,149 --> 00:11:57,749
They would just make sure describe their business
processes or production.

167
00:11:57,749 --> 00:12:02,490
Processes and I had some customers that would
like to use the.

168
00:12:02,490 --> 00:12:04,459
Common human methodologies during that time.

169
00:12:04,459 --> 00:12:11,320
That was the methodology space and to describe
systems.

170
00:12:11,320 --> 00:12:19,810
So I remember a customer who would like to
describe however equipment also cranes etc

171
00:12:19,810 --> 00:12:26,310
with humor and it's not very bad. And then
in 2003 we started with system.

172
00:12:26,310 --> 00:12:33,710
And the only tricky benefits and during the
development of system error do I.

173
00:12:33,710 --> 00:12:37,139
I created the system.

174
00:12:37,139 --> 00:12:38,430
Try to adapt.

175
00:12:38,430 --> 00:12:41,959
Adapt the system language.

176
00:12:41,959 --> 00:12:47,200
We developed an example and at the end we
we had all the team had developed system and

177
00:12:47,200 --> 00:12:50,559
I had people opt in.

178
00:12:50,559 --> 00:12:54,690
Ah OK, OK, interesting.

179
00:12:54,690 --> 00:13:02,490
OK, so since mode is very much as if I remember
correctly, it's very much about describing

180
00:13:02,490 --> 00:13:08,420
the context and and in architecture, but.

181
00:13:08,420 --> 00:13:15,889
Looking on the architecture side, we also
have the functional view of a system and.

182
00:13:15,889 --> 00:13:23,670
And Fuhs is exactly is a method for exactly
this aspect of view of the system, but one

183
00:13:23,670 --> 00:13:28,309
of the reason to invent a known method for
that.

184
00:13:28,309 --> 00:13:36,639
Yeah, so so this much does not contain functional
architectures and this is not the architecture

185
00:13:36,639 --> 00:13:38,500
is a physical architecture.

186
00:13:38,500 --> 00:13:41,569
Uhm, let's so to say aside my smarts.

187
00:13:41,569 --> 00:13:47,769
Instead of going directly from from the function
analysis those cases to the physical architecture,

188
00:13:47,769 --> 00:13:51,610
you can go to the functional architecture
and then to the physical architecture.

189
00:13:51,610 --> 00:13:54,630
And when a functional architecture.

190
00:13:54,630 --> 00:13:55,800
Or functions.

191
00:13:55,800 --> 00:14:02,629
But they are quite important that they are
the most important things of a system.

192
00:14:02,629 --> 00:14:05,269
That's why we built the system to get the
functionality that I get.

193
00:14:05,269 --> 00:14:10,350
We bought a car to move people to move things.

194
00:14:10,350 --> 00:14:11,550
It's not because it's nice.

195
00:14:11,550 --> 00:14:15,350
For some people, it's just because it's nice.

196
00:14:15,350 --> 00:14:17,490
So functions are important, so it makes.

197
00:14:17,490 --> 00:14:19,670
Sense to focus on them.

198
00:14:19,670 --> 00:14:25,220
But typically requirements engineers have
to focus on on functions when they elaborate

199
00:14:25,220 --> 00:14:31,329
functional requirements and so, but the architects
will focus on the architecture, so the the

200
00:14:31,329 --> 00:14:37,670
technical stuff and Speaking of system so
they look on the block diagrams and they do

201
00:14:37,670 --> 00:14:39,639
not have a focus on activity.

202
00:14:39,639 --> 00:14:45,610
Diagrams sometimes a bit on state machines
and so, but their main focus is on the pure

203
00:14:45,610 --> 00:14:47,210
structural stuff so.

204
00:14:47,210 --> 00:14:49,890
So the idea was to choose.

205
00:14:49,890 --> 00:14:53,339
Put a focus on the functions.

206
00:14:53,339 --> 00:14:56,259
For the architects and.

207
00:14:56,259 --> 00:15:03,779
Well, that was one of the main motivations
that would say, and the other motivation was

208
00:15:03,779 --> 00:15:10,439
in the the architecture work to strictly separate
the more stable functional part from the more

209
00:15:10,439 --> 00:15:13,360
unstable technical part.

210
00:15:13,360 --> 00:15:19,170
In particular, in the last years the technology
changes very fast.

211
00:15:19,170 --> 00:15:25,360
Via functions are still very listing so very
illustrative simple example is I.

212
00:15:25,360 --> 00:15:30,610
I very often daily use the function listen
to music and I do this.

213
00:15:30,610 --> 00:15:34,920
Since 40 years.

214
00:15:34,920 --> 00:15:40,290
I I guess I guess nearly 50 years you had
a birthday last week or week before.

215
00:15:40,290 --> 00:15:41,290
Yeah, but.

216
00:15:41,290 --> 00:15:44,369
I understand it's a baby you made.

217
00:15:44,369 --> 00:15:46,459
Not actively, I guess.

218
00:15:46,459 --> 00:15:53,200
But the first physical solution was probably
a completely out record player, and then I

219
00:15:53,200 --> 00:16:00,350
remember in the 1980s the CD player with Dire
straits also and then MP3 player and.

220
00:16:00,350 --> 00:16:03,399
Are you streaming services in the business
models?

221
00:16:03,399 --> 00:16:07,240
Changed, but the function is still the same.

222
00:16:07,240 --> 00:16:10,470
More functions now in the streaming service
then in the playoffs.

223
00:16:10,470 --> 00:16:16,199
So it's a little bit simplified, but very
instructive and shows the point.

224
00:16:16,199 --> 00:16:25,490
Yeah, yeah, I I really like the example I
once learned in a training with.

225
00:16:25,490 --> 00:16:26,490
Or was it?

226
00:16:26,490 --> 00:16:28,140
Was it a training or was it a?

227
00:16:28,140 --> 00:16:35,420
A speech, uh presentation from you with the
the.

228
00:16:35,420 --> 00:16:43,880
A Coca Cola machine where you also have basic
functionalities which didn't change over the

229
00:16:43,880 --> 00:16:44,880
years.

230
00:16:44,880 --> 00:16:46,870
It still cools the drink.

231
00:16:46,870 --> 00:16:51,559
It's still you still have to pay the drink.

232
00:16:51,559 --> 00:16:56,500
The technology for paying the drink is different
from now to the 50s.

233
00:16:56,500 --> 00:17:01,509
Or 60s or 70s or 80s where you only had the
possibilities we pay with coins.

234
00:17:01,509 --> 00:17:07,950
Now you can also pay with credit card or by
NFC with your watch or your mobile phone and

235
00:17:07,950 --> 00:17:09,110
so on.

236
00:17:09,110 --> 00:17:11,740
But the basic functionality.

237
00:17:11,740 --> 00:17:15,020
Pay for the drink is still the same.

238
00:17:15,020 --> 00:17:16,570
They want the beverage.

239
00:17:16,570 --> 00:17:19,550
And we have more and more decoupling.

240
00:17:19,550 --> 00:17:20,700
Of functions and.

241
00:17:20,700 --> 00:17:26,180
At the hardware the good parts, so they were
much closer in the past.

242
00:17:26,180 --> 00:17:30,280
So simply said in the past, it was a one to
one relationship with one function.

243
00:17:30,280 --> 00:17:31,430
And one physical thing.

244
00:17:31,430 --> 00:17:37,950
To implement it, and now it's more more decoupled
and we still focus on the pure physical things.

245
00:17:37,950 --> 00:17:38,950
So we.

246
00:17:38,950 --> 00:17:43,210
I have not focused on the functions anymore
and then we get problems that we optimize

247
00:17:43,210 --> 00:17:47,170
the physical part without knowing the impact
on the functions.

248
00:17:47,170 --> 00:17:53,990
Yeah yeah, function is a good point so.

249
00:17:53,990 --> 00:18:01,990
Infus you model the function as a block and
my question would be why not modeling as an

250
00:18:01,990 --> 00:18:08,730
activity as activity inherits from structural
and behavioral metaclasses.

251
00:18:08,730 --> 00:18:13,620
Huh, good question.

252
00:18:13,620 --> 00:18:16,180
We we have two kind of functions so to say
we have.

253
00:18:16,180 --> 00:18:19,320
The function in the problem space.

254
00:18:19,320 --> 00:18:25,900
And and that function is still represented
by an activity as part of the use case model

255
00:18:25,900 --> 00:18:29,400
where we use activities.

256
00:18:29,400 --> 00:18:36,060
And basically we also use the activities in
the solution space in the architecture world

257
00:18:36,060 --> 00:18:43,510
because in insertion error the activity model
element can be depicted on our block definition

258
00:18:43,510 --> 00:18:44,510
diagram.

259
00:18:44,510 --> 00:18:45,510
That's possible.

260
00:18:45,510 --> 00:18:46,510
And and.

261
00:18:46,510 --> 00:18:53,210
Yeah, you can show relationships between activities,
so compose those relationships or so, but

262
00:18:53,210 --> 00:18:59,040
you cannot show the object flow, so we cannot
show the the parameters of the activity and

263
00:18:59,040 --> 00:19:03,520
about the physician diagram you cannot connect
them and that's what we would like to see

264
00:19:03,520 --> 00:19:04,520
is here.

265
00:19:04,520 --> 00:19:07,270
So we set the architectural mailboxes.

266
00:19:07,270 --> 00:19:13,480
Interfaces and connections and so that's not
possible in activity, so we need the block

267
00:19:13,480 --> 00:19:14,720
for this.

268
00:19:14,720 --> 00:19:17,740
So we pick the block, the function block.

269
00:19:17,740 --> 00:19:22,000
The function block represents a set of.

270
00:19:22,000 --> 00:19:23,910
Related functions.

271
00:19:23,910 --> 00:19:29,350
And the function block gets plots depicting
the.

272
00:19:29,350 --> 00:19:31,620
Functional interfaces and the entire program.

273
00:19:31,620 --> 00:19:33,160
We can connect.

274
00:19:33,160 --> 00:19:37,570
All this stuff yeah correct yeah.

275
00:19:37,570 --> 00:19:41,940
And another reason is the function block is.

276
00:19:41,940 --> 00:19:46,620
The the semantics of the function block does
not fit to the semantics of an activity.

277
00:19:46,620 --> 00:19:48,310
An activity is a.

278
00:19:48,310 --> 00:19:56,060
Is a behavioral element and shows the sequencing
of actions and the functional block is more

279
00:19:56,060 --> 00:19:58,720
and more set of related.

280
00:19:58,720 --> 00:20:04,980
Other functions that can process audio signals
also in that block.

281
00:20:04,980 --> 00:20:06,510
Yeah, and stuff.

282
00:20:06,510 --> 00:20:07,910
I think that.

283
00:20:07,910 --> 00:20:11,130
Not the sequence from complete sequence.

284
00:20:11,130 --> 00:20:15,250
Yeah, yeah, but if you want to give it a behavior
you can still.

285
00:20:15,250 --> 00:20:19,070
Put a behavioral diagram on it.

286
00:20:19,070 --> 00:20:21,030
Yeah, yeah.

287
00:20:21,030 --> 00:20:23,460
Can can own behaviors.

288
00:20:23,460 --> 00:20:25,530
This answer came on the activity diagrams
then.

289
00:20:25,530 --> 00:20:26,530
That's possible.

290
00:20:26,530 --> 00:20:29,980
We'd like to have that, yeah?

291
00:20:29,980 --> 00:20:35,700
Was that you who listened to your speech or
training?

292
00:20:35,700 --> 00:20:38,430
So could you use us for yourselves?

293
00:20:38,430 --> 00:20:40,550
Indeed I did.

294
00:20:40,550 --> 00:20:48,450
It was more or less in the beginning of my
systems engineering career when I had another

295
00:20:48,450 --> 00:20:49,800
training with.

296
00:20:49,800 --> 00:20:53,340
I guess it was Steven.

297
00:20:53,340 --> 00:21:01,400
And and I was very impressed about his knowledge
of the UML metamodel, and everything was new

298
00:21:01,400 --> 00:21:02,870
for me and it was.

299
00:21:02,870 --> 00:21:04,180
Really interesting.

300
00:21:04,180 --> 00:21:10,660
But besides the whole system L stuff, and
we we had a big focus on the method on the

301
00:21:10,660 --> 00:21:13,760
fast method in this training and it was.

302
00:21:13,760 --> 00:21:16,000
Very valuable too.

303
00:21:16,000 --> 00:21:24,730
Or it was my moment in my life where I first
understood what a systems engineering method.

304
00:21:24,730 --> 00:21:30,430
We had this example of the forest fire detection
system.

305
00:21:30,430 --> 00:21:38,710
And yeah, yeah it it was extremely interesting
because you you go through these steps.

306
00:21:38,710 --> 00:21:45,980
These method steps and we created a functional
architecture where we saw something can't

307
00:21:45,980 --> 00:21:46,980
be right.

308
00:21:46,980 --> 00:21:49,180
So we we had many.

309
00:21:49,180 --> 00:21:57,710
Uh, is Attractional flows or something as
many flows between the functional architecture

310
00:21:57,710 --> 00:22:04,100
and it didn't seem to be right and so we went
back one step and we we followed the instructions

311
00:22:04,100 --> 00:22:09,460
again for this one step and then we we saw.

312
00:22:09,460 --> 00:22:12,090
Well, now we get an architecture.

313
00:22:12,090 --> 00:22:15,320
Which yeah, is is on the one hand simple.

314
00:22:15,320 --> 00:22:24,110
On the other hand, straightforward and not
so many interconnections between the different

315
00:22:24,110 --> 00:22:25,110
functional blocks.

316
00:22:25,110 --> 00:22:28,990
And yeah, it was very interesting to do that.

317
00:22:28,990 --> 00:22:32,820
And yeah, that was my first impression of.

318
00:22:32,820 --> 00:22:39,880
I had a similar experience in a real project
that was also quite interesting, so we we

319
00:22:39,880 --> 00:22:45,190
did most case analysis and then the plan was
to derive the functional architecture and

320
00:22:45,190 --> 00:22:47,840
the workshop there were.

321
00:22:47,840 --> 00:22:50,540
Requirement engineers and system architects
together and 1st.

322
00:22:50,540 --> 00:22:53,080
We started with the use cases and.

323
00:22:53,080 --> 00:22:55,580
We had the system architects.

324
00:22:55,580 --> 00:22:57,130
But then it was.

325
00:22:57,130 --> 00:22:58,210
A little bit boring, but it's.

326
00:22:58,210 --> 00:22:59,600
Not not their word.

327
00:22:59,600 --> 00:23:04,910
It's not block diagram, so it's full diagrams
for activities and of course they.

328
00:23:04,910 --> 00:23:07,850
They said things are nice and yeah, correct.

329
00:23:07,850 --> 00:23:15,350
There was no energy there and then we used
the fastpack in that was developed by the

330
00:23:15,350 --> 00:23:20,850
working group and it was the first truck end
you can.

331
00:23:20,850 --> 00:23:23,440
Create the first version of the functional
architectural.

332
00:23:23,440 --> 00:23:24,620
Model is automatically.

333
00:23:24,620 --> 00:23:28,150
Opposes to do some steps, but they recreate
automatically.

334
00:23:28,150 --> 00:23:33,820
So we did that bang and we have the function
architecture and then the architects.

335
00:23:33,820 --> 00:23:39,050
No, there's something that's kind of been
true, so this this architect gut feeling.

336
00:23:39,050 --> 00:23:42,481
They they see this pattern of an architecture
and see the.

337
00:23:42,481 --> 00:23:44,480
That's that's something wrong.

338
00:23:44,480 --> 00:23:48,890
And then they analyzed it when we there's
a lot of flexibility and and we could trace

339
00:23:48,890 --> 00:23:54,770
it back and there was an error, then the use
case model, but they had not seen that before

340
00:23:54,770 --> 00:23:58,850
because that's not their words and their gut
feeling.

341
00:23:58,850 --> 00:24:03,920
It doesn't work in the use case for it, but
it works on the architecture work.

342
00:24:03,920 --> 00:24:05,200
It was quite interesting.

343
00:24:05,200 --> 00:24:11,650
OK cool good story, so I guess it was was
interesting for both sides.

344
00:24:11,650 --> 00:24:20,710
So that yeah, defining use case is important,
but you can do shady stuff in in this stage

345
00:24:20,710 --> 00:24:23,040
and.

346
00:24:23,040 --> 00:24:30,360
If you can trace it back you, you will even
have a bad functional architecture or you

347
00:24:30,360 --> 00:24:39,030
will have some some change in a later phase,
which is very expensive regularly right?

348
00:24:39,030 --> 00:24:43,490
Yeah, so it's quite a nice method and it's.

349
00:24:43,490 --> 00:24:46,540
Easy to apply in workshops, even for people
who.

350
00:24:46,540 --> 00:24:48,310
There's no modeling knowledge.

351
00:24:48,310 --> 00:24:51,940
Now you can do this with with cards and so
that's very valid.

352
00:24:51,940 --> 00:24:57,270
It's also in conferences, in in for our workshops
or so we we created from the beginning of

353
00:24:57,270 --> 00:25:03,750
a system idea until the function architecture
we were able to do this for hours, so it was

354
00:25:03,750 --> 00:25:10,210
very simplified, but it works without modeling
knowledge, so and but if you.

355
00:25:10,210 --> 00:25:13,970
Model it then, of course, it's a little bit
complicated.

356
00:25:13,970 --> 00:25:22,410
If we use the the plugins then a lot of that
stuff is behind the scenes in the scripts,

357
00:25:22,410 --> 00:25:26,620
but if you have to do this completely yourself,
it's it's a lot of modeling because it's not

358
00:25:26,620 --> 00:25:31,640
directly supported by my system and certainly
doesn't know the concept of functional architecture,

359
00:25:31,640 --> 00:25:34,220
so this also doesn't work.

360
00:25:34,220 --> 00:25:40,280
Concept of system context doesn't want to
model those things and then have sometimes

361
00:25:40,280 --> 00:25:42,450
do a lot of things so.

362
00:25:42,450 --> 00:25:43,890
They do a lot.

363
00:25:43,890 --> 00:25:48,460
So, so the the modeling could be very hard,
and if you are not the experience of modeling

364
00:25:48,460 --> 00:25:55,240
then it distracts you from the real interesting
engineering stuff and you'll focus on those.

365
00:25:55,240 --> 00:25:57,530
Models and so.

366
00:25:57,530 --> 00:25:58,530
Yeah, yeah.

367
00:25:58,530 --> 00:26:00,900
So that's probably a disadvantage.

368
00:26:00,900 --> 00:26:07,590
Yeah, but everything you you said in the last
sentences is also true for variant modeling

369
00:26:07,590 --> 00:26:09,070
and so.

370
00:26:09,070 --> 00:26:15,490
Yeah, let's switch to famous so so.

371
00:26:15,490 --> 00:26:19,230
Basically famous address is another missing
piece.

372
00:26:19,230 --> 00:26:25,520
Besides functional architecture, system context
and so on and in a missing piece in the smell,

373
00:26:25,520 --> 00:26:34,700
so to say and and with famous you invented
a method to make it possible to model.

374
00:26:34,700 --> 00:26:38,310
Variability in UML and smell right?

375
00:26:38,310 --> 00:26:39,980
Yes, right so.

376
00:26:39,980 --> 00:26:45,650
So some larger one I would say.

377
00:26:45,650 --> 00:26:47,370
Yeah correct, yeah, no.

378
00:26:47,370 --> 00:26:49,440
Nowadays we have to say this is an.

379
00:26:49,440 --> 00:26:51,180
Operation one yeah.

380
00:26:51,180 --> 00:26:57,520
Version one doesn't have explicit model elements
for Marion, so it's not part of the language,

381
00:26:57,520 --> 00:27:04,320
and I remember that we discussed that variant
modeling issue when we developed this Melbourne

382
00:27:04,320 --> 00:27:06,740
one now 20 years ago.

383
00:27:06,740 --> 00:27:08,630
So so so the.

384
00:27:08,630 --> 00:27:14,660
The idea was to create a modeling language
assistant model language as simple as possible

385
00:27:14,660 --> 00:27:23,020
for various reasons, and so that was the reason
why we did not explicitly included variant

386
00:27:23,020 --> 00:27:25,340
modeling to the language.

387
00:27:25,340 --> 00:27:33,280
And at the same time it was clear for us that
we can do modeling variants with system, that

388
00:27:33,280 --> 00:27:36,650
it's possible to do that, although there's
no explicit model element.

389
00:27:36,650 --> 00:27:41,340
But you can do this mainly with the generalization
relationship is a kind of.

390
00:27:41,340 --> 00:27:45,510
Core variant modeling relationships with the
C.

391
00:27:45,510 --> 00:27:50,820
But we explicitly excluded it from the language,
and otherwise where.

392
00:27:50,820 --> 00:27:55,310
Then we also had to include safety, which
is important in other things and then then.

393
00:27:55,310 --> 00:28:01,860
Yeah, it would have cost more years to develop
system and it's a very large language.

394
00:28:01,860 --> 00:28:03,750
And then you need tools that implement it.

395
00:28:03,750 --> 00:28:05,270
Into all these.

396
00:28:05,270 --> 00:28:10,170
So it's most intended to have a simple modeling
language.

397
00:28:10,170 --> 00:28:16,460
Yeah, and then well, since it was published,
the project started using system and of course

398
00:28:16,460 --> 00:28:18,680
the question came up.

399
00:28:18,680 --> 00:28:20,260
Model variance assessment and.

400
00:28:20,260 --> 00:28:23,860
When people say very good journalism relationship.

401
00:28:23,860 --> 00:28:25,250
But you know how to use.

402
00:28:25,250 --> 00:28:27,010
Its learn how to model their variation point.

403
00:28:27,010 --> 00:28:28,010
And how to do?

404
00:28:28,010 --> 00:28:31,820
This and this and that and how to model.

405
00:28:31,820 --> 00:28:36,510
Variant constraint snow, like or exclusive,
all of two backgrounds.

406
00:28:36,510 --> 00:28:37,510
Right?

407
00:28:37,510 --> 00:28:39,000
And yeah, there's a constraint relationship
in system.

408
00:28:39,000 --> 00:28:45,240
You can use that model, but how to do this
so and that was the idea of the famous approach

409
00:28:45,240 --> 00:28:51,060
to to show how to do variant modeling with
fewer system.

410
00:28:51,060 --> 00:28:53,170
So including stereotypes.

411
00:28:53,170 --> 00:28:57,240
But there's no need for a specific.

412
00:28:57,240 --> 00:29:01,780
So you can define variation points there.

413
00:29:01,780 --> 00:29:05,960
Variable constraints all this stuff.

414
00:29:05,960 --> 00:29:08,650
And configurations in the end.

415
00:29:08,650 --> 00:29:15,550
In configurations and I also developed the
OCS statements behind the constraints, so

416
00:29:15,550 --> 00:29:22,020
these exclusive all and so we can create a
variant consideration in the model.

417
00:29:22,020 --> 00:29:28,010
And if the Troy can execute the constraints,
the model can check if it's a valid configuration.

418
00:29:28,010 --> 00:29:32,840
Or not, so we have this scenario configuration
inside the modeling tool based on cues.

419
00:29:32,840 --> 00:29:38,710
Then it's so that's quite nice, but variant
modeling is a very complex thing.

420
00:29:38,710 --> 00:29:45,290
That's a multi dimensional configuration space,
so it's invariant complex thing.

421
00:29:45,290 --> 00:29:50,570
And if we now use a modeling tool that has
no convenience functions for that, that just

422
00:29:50,570 --> 00:29:54,540
uses the stereotypes from Bayless.

423
00:29:54,540 --> 00:30:01,060
Then we have a limit there, so if it's getting
too complex then it's really hard to manage

424
00:30:01,060 --> 00:30:04,610
those models in this modeling tool.

425
00:30:04,610 --> 00:30:12,750
OK, did you ever use it in another SMM tool
outside Cameo Systems Modeler?

426
00:30:12,750 --> 00:30:15,660
Uhm yeah also in.

427
00:30:15,660 --> 00:30:17,730
With Oedipus architect.

428
00:30:17,730 --> 00:30:20,850
But without the OCL stuff.

429
00:30:20,850 --> 00:30:21,850
OK.

430
00:30:21,850 --> 00:30:29,530
So so the also add statements are not executed,
but the description of the the variance is

431
00:30:29,530 --> 00:30:32,020
possible enterprise architects and.

432
00:30:32,020 --> 00:30:34,700
Yeah, also the diversity.

433
00:30:34,700 --> 00:30:37,400
OK, well, interesting.

434
00:30:37,400 --> 00:30:43,760
A few weeks ago, let's officials have pushed
the veils profile for absolutely it's.

435
00:30:43,760 --> 00:30:44,840
I think it's not blocked, but.

436
00:30:44,840 --> 00:30:45,840
Not sure.

437
00:30:45,840 --> 00:30:47,190
Oh yeah, we can.

438
00:30:47,190 --> 00:30:53,600
Look it up and and put it in the episode description.

439
00:30:53,600 --> 00:30:55,640
If we find it.

440
00:30:55,640 --> 00:30:59,740
And and in another project we combines.

441
00:30:59,740 --> 00:31:00,930
Parts of the.

442
00:31:00,930 --> 00:31:06,470
Based approach with pure systems the the Q
systems tool.

443
00:31:06,470 --> 00:31:11,840
I'll send it through various yeah and the
senator told us from from big level.

444
00:31:11,840 --> 00:31:12,840
Gears office.

445
00:31:12,840 --> 00:31:14,930
So it's the same yes, yes.

446
00:31:14,930 --> 00:31:16,310
Yes, right?

447
00:31:16,310 --> 00:31:23,650
So so they can manage the the feature model
and they can manage configurations.

448
00:31:23,650 --> 00:31:25,990
But they do not.

449
00:31:25,990 --> 00:31:31,480
We contain the capability for the toward the
configuration model, so you can do the configuration

450
00:31:31,480 --> 00:31:35,210
model with the base approach.

451
00:31:35,210 --> 00:31:36,740
Manage then the config.

452
00:31:36,740 --> 00:31:38,620
Operations with humans, for example.

453
00:31:38,620 --> 00:31:42,640
OK, yeah, it reminds me that.

454
00:31:42,640 --> 00:31:49,990
Reminds me of a that we that we really should
invite our little boy in our podcast.

455
00:31:49,990 --> 00:31:56,220
Because he can tell us very very much about
product line engineering.

456
00:31:56,220 --> 00:32:00,260
Feature oriented domain analyzes and so on
and so further.

457
00:32:00,260 --> 00:32:02,260
Yeah yeah, but.

458
00:32:02,260 --> 00:32:08,610
Speaking, Speaking of variation points and
variance and everything they must brings with

459
00:32:08,610 --> 00:32:10,990
it and.

460
00:32:10,990 --> 00:32:13,880
This is already included in system LV 2, isn't
it?

461
00:32:13,880 --> 00:32:17,580
So is there still a need for Vegas later on?

462
00:32:17,580 --> 00:32:27,670
I I have not analyzed that in detail, so this
will be tool will contain variants concepts

463
00:32:27,670 --> 00:32:28,670
based on the ISO standard.

464
00:32:28,670 --> 00:32:33,990
And there are four variant concepts that should
be portable.

465
00:32:33,990 --> 00:32:38,250
Language variation points, variant variation,
variant binding for amendment correctly.

466
00:32:38,250 --> 00:32:43,610
So the core concepts of merit modeling.

467
00:32:43,610 --> 00:32:54,670
So not all concepts of famous cover basis
will be true, so so I assume that I will create

468
00:32:54,670 --> 00:32:56,140
an update.

469
00:32:56,140 --> 00:33:00,640
On on how famous looks like a system will
be true, especially to support the migration

470
00:33:00,640 --> 00:33:01,640
from system we want.

471
00:33:01,640 --> 00:33:02,950
Is this maybe two orders?

472
00:33:02,950 --> 00:33:06,240
Which means laimos UM.

473
00:33:06,240 --> 00:33:12,240
But most parts of the current famous thing
is then obsolete in the future and in the

474
00:33:12,240 --> 00:33:18,950
long term I would then focus more on the variant
modeling methods in demos.

475
00:33:18,950 --> 00:33:26,430
Demos is now more more language, no language
extension and the definition of the variant

476
00:33:26,430 --> 00:33:27,450
concepts.

477
00:33:27,450 --> 00:33:29,790
And not so much a method.

478
00:33:29,790 --> 00:33:32,430
So I think it will focus many more on the
method.

479
00:33:32,430 --> 00:33:37,760
For example, there's a new interesting upcoming
discipline model based product line engineering,

480
00:33:37,760 --> 00:33:38,760
and.

481
00:33:38,760 --> 00:33:43,460
East UM, which was product engineer with models.

482
00:33:43,460 --> 00:33:51,150
And and I think there's a lot of.

483
00:33:51,150 --> 00:34:00,850
Some space to define more methods or so, so
I think that that's the future of famous.

484
00:34:00,850 --> 00:34:02,850
OK, interesting.

485
00:34:02,850 --> 00:34:07,050
All right, so uhm?

486
00:34:07,050 --> 00:34:12,460
I think we are through with smart, famous
and fast with the basic concepts.

487
00:34:12,460 --> 00:34:16,050
Who wants to know more?

488
00:34:16,050 --> 00:34:22,020
We will link all the books which were published
from Tim to all these topic.

489
00:34:22,020 --> 00:34:27,659
Thanks and if you want a training you can
directly go to author and.

490
00:34:27,659 --> 00:34:33,759
So yeah, ask them for consultancy and training
and if you enjoyed this episode, give us our

491
00:34:33,759 --> 00:34:34,849
thumbs up.

492
00:34:34,849 --> 00:34:41,109
Subscribe to the channel for free here on
YouTube to not miss out any future episode.

493
00:34:41,109 --> 00:34:43,770
Which episode?

494
00:34:43,770 --> 00:34:45,589
What's the next episode?

495
00:34:45,589 --> 00:34:46,589
That's a good question.

496
00:34:46,589 --> 00:34:48,450
Can you answer it?

497
00:34:48,450 --> 00:34:49,450
I can't.

498
00:34:49,450 --> 00:34:50,450
Yeah, yeah, no.

499
00:34:50,450 --> 00:34:57,410
I I know that we look for we we are in contact
with the company in query a very interesting

500
00:34:57,410 --> 00:35:01,509
company, but we plan an episode with them
in October November so.

501
00:35:01,509 --> 00:35:03,559
So we look for date.

502
00:35:03,559 --> 00:35:11,950
But we will definitely do episode before October,
November and and no, we have not defined it

503
00:35:11,950 --> 00:35:12,950
yet.

504
00:35:12,950 --> 00:35:19,490
Yeah, so if you or if you our listeners have
an idea, let's uh.

505
00:35:19,490 --> 00:35:20,490
15 minutes.

506
00:35:20,490 --> 00:35:26,510
Give us, give us a hint in the comments in
the comments section what you want to hear

507
00:35:26,510 --> 00:35:27,630
about.

508
00:35:27,630 --> 00:35:34,589
Maybe it's a little bit on update of System
LV 2 because there we are nearly at the final

509
00:35:34,589 --> 00:35:37,200
submission.

510
00:35:37,200 --> 00:35:41,100
Or other topics around systems engineering?

511
00:35:41,100 --> 00:35:46,749
Uhm, if not we will we have a long list of
speakers?

512
00:35:46,749 --> 00:35:57,960
Should be invited by us soon and and topics
so this should not be the end of the podcast

513
00:35:57,960 --> 00:35:59,560
here.

514
00:35:59,560 --> 00:36:03,950
Yeah, Tim was nice to speak to you.

515
00:36:03,950 --> 00:36:07,589
It was even nicer to speak to you in person
on Monday and Switzerland.

516
00:36:07,589 --> 00:36:09,829
Yes, it was a great conference.

517
00:36:09,829 --> 00:36:11,970
This was it.

518
00:36:11,970 --> 00:36:13,049
Perfect.

519
00:36:13,049 --> 00:36:14,950
And great weather directly on Zurich.

520
00:36:14,950 --> 00:36:21,210
See on the Zurich Lake was was a great conference
devil.

521
00:36:21,210 --> 00:36:28,589
OK, so thanks for listening and do not forget.

522
00:36:28,589 --> 00:36:31,240
Trust us yeah, assist with any lists.

523
00:36:31,240 --> 00:36:32,900
We assistance engineers goodbye.

524
00:36:32,900 --> 00:36:33,729
Bye bye.

